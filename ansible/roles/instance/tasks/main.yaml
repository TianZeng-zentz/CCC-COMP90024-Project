---
# Create an instance on NeCTAR
- name: Create an instance
  os_server:
    name: '{{ item.name }}'
    image: '{{ instance_image }}'
    key_name: '{{ instance_key_name }}'
    flavor: '{{ instance_flavor }}'
    availability_zone: '{{ availability_zone }}'
    security_groups: '{{ os_sg_ids }}'
    volumes: '{{ item.volumes }}'
    network: '{{ instance_network }}'
    auto_floating_ip: yes
    wait: yes
    timeout: 600
    state: present
  loop: '{{ instances }}'
  register: os_instance

- debug:
    msg: "Instance {{ item.openstack.name }} has been created. IP address is {{ item.openstack.public_v4 }}"
  loop: '{{ os_instance.results }}'
  when: item.openstack is defined

- name: Wait for connection
  wait_for:
    host: "{{ item.openstack.public_v4 }}"
    port: 22
    timeout: 120
    search_regex: OpenSSH
  loop: '{{ os_instance.results }}'
  when: item.openstack is defined

# Add hosts to Ansible in-memory inventory
- name: Add host
  add_host:
    name: '{{ item.openstack.public_v4 }}'
    groups: Group38
  loop: '{{ os_instance.results }}'
  when: item.openstack is defined

# get a list of instance Ids from the return value of os_instance
- name: Create a list of instance Ids
  set_fact:
    os_instance_ids: '{{ os_instance_ids|default([]) + [ item.id ] }}'
  loop: '{{ os_instance.results }}'

# - debug:
#     msg: "Instance {{ os_instance_ids }} has been created."
#   when: os_instance.name is defined

- name: Modify inventory/hosts
  blockinfile:
    path: /Users/linyuming/Unimelb/COMP 90024 Cluster and Cloud Computing/assignment2/ansible/inventory/hosts
    block: |
      [root]
      {{ os_instance.results.0.openstack.public_v4 }}
      [sub1]
      {{ os_instance.results.1.openstack.public_v4 }}
      [sub2]
      {{ os_instance.results.2.openstack.public_v4 }}
      [web]
      {{ os_instance.results.3.openstack.public_v4 }}