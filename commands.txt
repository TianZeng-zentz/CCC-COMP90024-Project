查看磁盘以可读形式展示
df -h
分配volume
sudo mkdir data
sudo mkfs -t ext4 /dev/vdb
sudo mount -t auto /dev/vdb /data
查看现有的disks
fdisk -l
分配存储地址
mkfs.ext4 /dev/vdb

查看当前路径
pwd

设置root的密码
sudo passwd
设置用户ubuntu密码(关键，如果虚拟机崩盘需要用console重启。)
sudo passwd ubuntu

安装couchdb需要先在里面添加属于当前版本机器的sources.list
$ echo "deb https://apache.bintray.com/couchdb-deb bionic main" \
    | sudo tee -a /etc/apt/sources.list

$ curl -L https://couchdb.apache.org/repo/bintray-pubkey.asc \
    | sudo apt-key add -

$ sudo apt-get update && sudo apt-get install couchdb

$ sudo service couchdb restart

sudo /etc/init.d/couchdb stop
sudo /etc/init.d/couchdb start
sudo /etc/init.d/couchdb restart

改变couchdb存储位置
/opt/couchdb/etc
查看权限和改变权限
ls -l 文件名
chmod 777 local.ini
加这三句话
bind_address = 0.0.0.0
database_dir = /data
view_index_dir = /data

查找
whereis指令
find ./ -name "*.json"

添加node
curl -X POST -H "Content-Type: application/json" http://admin:password@127.0.0.1:5984/_cluster_setup -d '{"action": "enable_cluster", "bind_address":"0.0.0.0", "username": "admin", "password":"password", "node_count":"3"}'

curl -X POST -H "Content-Type: application/json" http://admin:project@127.0.0.1:5984/_cluster_setup -d '{"action": "enable_cluster", "bind_address":"0.0.0.0", "username": "admin", "password":"project", "port": 5984, "remote_node": "45.113.234.207", "remote_current_user": "admin", "remote_current_password": "project" }'

curl -X POST -H "Content-Type: application/json" http://admin:project@127.0.0.1:5984/_cluster_setup -d '{"action": "add_node", "host":"45.113.234.207", "port": "5984", "username": "admin", "password":"project"}'

curl -X POST -H "Content-Type: application/json" http://admin:project@127.0.0.1:5984/_cluster_setup -d '{"action": "finish_cluster"}'

查看是否正常运行
curl http://127.0.0.1:5984/
查看集群
curl http://admin:project@localhost:5984/_membership

查看当前运行的线程
ps -ef |grep python
终止线程
kill -9 pid 前面的是id

删除nginx：https://www.cnblogs.com/Liqiongyu/p/5879012.html
etc/init.d/nginx  start stop  restart
sudo apt-get --purge remove nginx
sudo apt-get autoremove自动删除不用的包
dpkg --get-selections|grep nginx
sudo apt-get --purge remove nginx
sudo apt-get --purge remove nginx-common
sudo apt-get --purge remove nginx-core

查看端口使用情况
https://www.runoob.com/w3cnote/linux-check-port-usage.html
lsof -i:8080：查看8080端口占用
lsof abc.txt：显示开启文件abc.txt的进程
lsof -c abc：显示abc进程现在打开的文件
lsof -c -p 1234：列出进程号为1234的进程所打开的文件
lsof -g gid：显示归属gid的进程情况
lsof +d /usr/local/：显示目录下被进程开启的文件
lsof +D /usr/local/：同上，但是会搜索目录下的目录，时间较长
lsof -d 4：显示使用fd为4的进程
lsof -i -U：显示所有打开的端口和UNIX domain文件

网络端口相关指令 需要apt net-tools
netstat -tunlp | grep 端口号
sudo netstat -tulpn | grep LISTEN

proxy配置信息
http_proxy="http://wwwproxy.unimelb.edu.au:8000"
https_proxy="http://wwwproxy.unimelb.edu.au:8000"
ftp_proxy="http://wwwproxy.unimelb.edu.au:8000"
no_proxy=localhost,127.0.0.1,127.0.1.1,ubuntu

docker的proxy配置信息
sudo mkdir -p /etc/systemd/system/docker.service.d

运行docker镜像, -d让他后台运行不会阻塞住shell指令窗口并返回容器ID。-p来指定内外端口映射，格式为：“主机端口:容器端口”，主机端口用来访问，会直接转发到容器上的端口。-v用来绑定目录。--name指定名字。
docker run -p 5984:5984 -d couchdb

查看已下载的镜像
docker image

查看正在运行的容器
docker ps

通过Dockerfile打包为一个镜像,点是(上下文路径)，上下文路径下不要放无用的文件，因为会一起打包发送给 docker 引擎，如果文件过多会造成过程缓慢。
docker build -t 镜像名称:镜像标签 .

进入docker容器进行操作
docker exec -it 容器id /bin/bash

删除镜像
docker rm -f 容器id

将容器保存为镜像
docker commit 容器id 镜像名字:标签

sudo systemctl daemon-reload
sudo systemctl restart docker
[Service]
Environment="HTTP_PROXY=http://wwwproxy.unimelb.edu.au:8000/"

docker swarm run compose的指令
docker stack deploy -c docker-compose.yml wordpress

查看docker swarm服务
docker stack ls

docker停止stack服务
docker stack down wordpress

手动设置docker不需要sudo的指令
sudo usermod -aG docker $USER
sudo service docker restart

删除所有本地docker images，container
docker stop $(docker ps -a -q) && docker system prune --all --force

检查各类docker版本
pip list | grep docker

联合执行指令
python3 newharvester.py & python3 searchByName.py & python3 process.py

奇怪的shell
echo -e "\n"

检查文件大小指令：
ls  -lht 

查找全部Nginx进程
ps -ef|grep nginx

vi指令合集
https://www.runoob.com/linux/linux-vim.html

进入虚拟环境
source venv/bin/activate

导出软件包
pip freeze > requirements.txt


